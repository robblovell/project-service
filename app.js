// Generated by CoffeeScript 1.10.0
(function() {
  var Layout, Layouts, Placeable, Placeables, Project, Projects, ProjectsRooms, Resources, Room, Rooms, RoomsLayouts, RoomsPlaceables, app, bodyParser, config, cookieParser, cors, express, favicon, haltOnTimedout, logger, mongoose, path, routes, swagger, timeout;

  express = require('express');

  path = require('path');

  cors = require('cors');

  favicon = require('serve-favicon');

  logger = require('morgan');

  cookieParser = require('cookie-parser');

  bodyParser = require('body-parser');

  routes = require('./routes/index');

  config = require('./config/configuration');

  app = express();

  app.set('views', path.join(__dirname, 'views'));

  app.set('view engine', 'jade');

  app.use(logger('dev'));

  app.use(cors());

  app.use(bodyParser.json());

  app.use(bodyParser.urlencoded({
    extended: false
  }));

  app.use(cookieParser());

  app.use(require('stylus').middleware(path.join(__dirname, 'public')));

  app.use(express["static"](path.join(__dirname, 'public')));

  app.use('/', routes);

  config = require('./config/configuration');

  mongoose = require('mongoose');

  mongoose.Promise = require('bluebird');

  mongoose.connect(config.db);

  Room = require('./models/room');

  Rooms = require('./controllers/rooms')(app, Room.model);

  Project = require('./models/project');

  Projects = require('./controllers/projects')(app, Project.model);

  Layout = require('./models/layout');

  Layouts = require('./controllers/layouts')(app, Layout.model);

  Placeable = require('./models/placeable');

  Placeables = require('./controllers/placeables')(app, Layout.model);

  ProjectsRooms = require('./controllers/projects_rooms')(app, Room.model);

  RoomsLayouts = require('./controllers/rooms_layouts')(app, Layout.model);

  RoomsPlaceables = require('./controllers/rooms_placeables')(app, Placeable.model);

  Resources = {
    Projects: Projects,
    Rooms: Rooms,
    Layouts: Layouts,
    Placeables: Placeables,
    ProjectsRooms: ProjectsRooms,
    RoomsLayouts: RoomsLayouts,
    RoomsPlaceables: RoomsPlaceables
  };

  swagger = require('./controllers/swagger')(app, Resources, '/spec', config);

  timeout = require('connect-timeout');

  app.use(timeout(config.timeout));

  haltOnTimedout = function(req, res, next) {
    if (!req.timedout) {
      return next();
    }
  };

  app.use(haltOnTimedout);

  if (app.get('env') === 'development' || app.get('env') === 'local') {
    app.use(function(err, req, res, next) {
      if ((err != null)) {
        res.status(err.status || 500);
        return res.render('error', {
          message: err.message,
          error: err
        });
      }
    });
  } else {
    app.use(function(err, req, res, next) {
      if ((err != null)) {
        res.status(err.status || 500);
        return res.render('error', {
          message: err.message,
          error: {}
        });
      }
    });
  }

  module.exports = app;

}).call(this);

//# sourceMappingURL=app.js.map
