// Generated by CoffeeScript 1.10.0
(function() {
  var Engine, Resource, Rule, mongoose, typeIsArray;

  mongoose = require('mongoose');

  Resource = require('resourcejs');

  Engine = require('../src/engine');

  Rule = require('../models/rule').model;

  typeIsArray = require('./helpers/typeIsArray');

  module.exports = function(app, model) {
    var resource;
    resource = Resource(app, '', 'Facts', model).post({
      before: function(req, res, next) {
        var context, facts;
        facts = req.body.fact;
        if (typeIsArray(req.body.context)) {
          if (req.body.context.length < 1) {
            res.render('error', {
              message: "No context given",
              error: {}
            });
            return;
          }
          req.body.context = req.body.context[0];
        }
        context = {
          context: {
            "$elemMatch": req.body.context
          }
        };
        Rule.find(context, function(error, result) {
          var engine, rules;
          if ((error != null) || result.length < 1) {
            return res.send("Rules not found");
          } else if (result != null) {
            rules = result[0].toObject().rules;
            engine = new Engine(rules);
            engine.execute(facts, function(error, result) {
              if ((error != null)) {
                return res.render('error', {
                  message: error,
                  error: {}
                });
              } else {
                return res.send(JSON.stringify(result));
              }
            });
          }
        });
      }
    });
    return resource;
  };

}).call(this);

//# sourceMappingURL=facts.js.map
